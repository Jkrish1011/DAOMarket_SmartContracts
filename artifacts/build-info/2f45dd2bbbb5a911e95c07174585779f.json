{
  "id": "2f45dd2bbbb5a911e95c07174585779f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/governance_standard/Registry.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/ERC1616.sol\";\n\ncontract Registry is ERC1616 {\n    enum Affiliation { CommodityValue }\n\n    // Top-level information about attribute types held in a static array.\n    uint256[1] private _attributeTypeIDs;\n\n    // Issued attributes held in a nested mapping by account & attribute type.\n    mapping(address => mapping(uint256 => bool)) private _issuedAttributes;\n\n    event SenderAddress(address senderAddr);\n\n    // Issued attribute values held in a nested mapping by account & type.\n    // uint256[2] = [PastValue, PresentValue]\n    mapping(address => mapping(uint256 => uint256[2]))\n        private _issuedAttributeValues;\n\n    constructor() {\n        _attributeTypeIDs = [0];\n    }\n\n    function addCommodityValue(uint256 value) external {\n        uint256 commodityValueValueIndex = uint256(Affiliation.CommodityValue);\n        // uint256 presentValueIndex = uint256(Affiliation.PresentValue);\n        \n        uint256 presentAttributeTypeID = _attributeTypeIDs[commodityValueValueIndex];\n\n        _issuedAttributes[msg.sender][presentAttributeTypeID] = true;\n\n        _issuedAttributeValues[msg.sender][presentAttributeTypeID] = [value, value];\n        emit SenderAddress(msg.sender);\n    }\n\n    function updateCommodityValue(uint256 newValue) external {\n        uint256 commodityValueValueIndex = uint256(Affiliation.CommodityValue);\n        // uint256 presentValueIndex = uint256(Affiliation.PresentValue);\n        \n        uint256 presentAttributeTypeID = _attributeTypeIDs[commodityValueValueIndex];\n\n        _issuedAttributes[msg.sender][presentAttributeTypeID] = true;\n        uint256 currentPresentValue = _issuedAttributeValues[msg.sender][presentAttributeTypeID][1];\n        _issuedAttributeValues[msg.sender][presentAttributeTypeID] = [currentPresentValue, newValue];\n    }\n\n    /**\n     * @notice Check if an attribute of the type with ID `attributeTypeID` has\n     * been assigned to the account at `account` and is currently valid.\n     * @param account address The account to check for a valid attribute.\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\n     * @return True if the attribute is assigned and valid, false otherwise.\n     * @dev This function MUST return either true or false - i.e. calling this\n     * function MUST NOT cause the caller to revert.\n     */\n    function hasAttribute(address account, uint256 attributeTypeID)\n        external\n        view\n        returns (bool)\n    {\n        // Return assignment status of attribute by account and attribute type ID\n        return _issuedAttributes[account][attributeTypeID];\n    }\n\n    /*\n     * @notice Retrieve the value of the attribute of the type with ID\n     * `attributeTypeID` on the account at `account`, assuming it is valid.\n     * @param account address The account to check for the given attribute value.\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\n     * @return The attribute value if the attribute is valid, reverts otherwise.\n     * @dev This function MUST revert if a directly preceding or subsequent\n     * function call to `hasAttribute` with identical `account` and\n     * `attributeTypeID` parameters would return false.\n     */\n    function getAttributeValue(address account, uint256 attributeTypeID)\n        external\n        view\n        returns (uint256[2] memory)\n    {\n        // Revert if attribute with given account & attribute type ID is unassigned\n        require(\n            _issuedAttributes[account][attributeTypeID],\n            \"Attribute type ID not found!\"\n        );\n        uint256[2] memory returnValue = _issuedAttributeValues[account][attributeTypeID];\n        return returnValue;\n    }\n\n    /**\n     * @notice Count the number of attribute types defined by the registry.\n     * @return The number of available attribute types.\n     * @dev This function MUST return a positive integer value  - i.e. calling\n     * this function MUST NOT cause the caller to revert.\n     */\n    function countAttributeTypes() external view returns (uint256) {\n        return _attributeTypeIDs.length;\n    }\n\n    /**\n     * @notice Get the ID of the attribute type at index `index`.\n     * @param index uint256 The index of the attribute type in question.\n     * @return The ID of the attribute type.\n     * @dev This function MUST revert if the provided `index` value falls outside\n     * of the range of the value returned from a directly preceding or subsequent\n     * function call to `countAttributeTypes`. It MUST NOT revert if the provided\n     * `index` value falls inside said range.\n     */\n    function getAttributeTypeID(uint256 index) external view returns (uint256) {\n        require(\n            index < _attributeTypeIDs.length,\n            \"Index Out of Bound!\"\n        );\n\n        return _attributeTypeIDs[index];\n    }\n}\n"
      },
      "contracts/interfaces/ERC1616.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title ERC-1616 Attribute Registry interface. ERC-165 ID: 0x5f46473f\n */\ninterface ERC1616 {\n    /**\n     * @notice Check if an attribute of the type with ID `attributeTypeID` has\n     * been assigned to the account at `account` and is currently valid.\n     * @param account address The account to check for a valid attribute.\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\n     * @return True if the attribute is assigned and valid, false otherwise.\n     * @dev This function MUST return either true or false - i.e. calling this\n     * function MUST NOT cause the caller to revert.\n     */\n    function hasAttribute(address account, uint256 attributeTypeID)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @notice Retrieve the value of the attribute of the type with ID\n     * `attributeTypeID` on the account at `account`, assuming it is valid.\n     * @param account address The account to check for the given attribute value.\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\n     * @return The attribute value if the attribute is valid, reverts otherwise.\n     * @dev This function MUST revert if a directly preceding or subsequent\n     * function call to `hasAttribute` with identical `account` and\n     * `attributeTypeID` parameters would return false.\n     */\n    function getAttributeValue(address account, uint256 attributeTypeID)\n        external\n        view\n        returns (uint256[2] memory);\n\n    /**\n     * @notice Count the number of attribute types defined by the registry.\n     * @return The number of available attribute types.\n     * @dev This function MUST return a positive integer value  - i.e. calling\n     * this function MUST NOT cause the caller to revert.\n     */\n    function countAttributeTypes() external view returns (uint256);\n\n    /**\n     * @notice Get the ID of the attribute type at index `index`.\n     * @param index uint256 The index of the attribute type in question.\n     * @return The ID of the attribute type.\n     * @dev This function MUST revert if the provided `index` value falls outside\n     * of the range of the value returned from a directly preceding or subsequent\n     * function call to `countAttributeTypes`. It MUST NOT revert if the provided\n     * `index` value falls inside said range.\n     */\n    function getAttributeTypeID(uint256 index) external view returns (uint256);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/governance_standard/Registry.sol": {
        "Registry": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "senderAddr",
                  "type": "address"
                }
              ],
              "name": "SenderAddress",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "addCommodityValue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "countAttributeTypes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getAttributeTypeID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "attributeTypeID",
                  "type": "uint256"
                }
              ],
              "name": "getAttributeValue",
              "outputs": [
                {
                  "internalType": "uint256[2]",
                  "name": "",
                  "type": "uint256[2]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "attributeTypeID",
                  "type": "uint256"
                }
              ],
              "name": "hasAttribute",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newValue",
                  "type": "uint256"
                }
              ],
              "name": "updateCommodityValue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "countAttributeTypes()": {
                "details": "This function MUST return a positive integer value  - i.e. calling this function MUST NOT cause the caller to revert.",
                "returns": {
                  "_0": "The number of available attribute types."
                }
              },
              "getAttributeTypeID(uint256)": {
                "details": "This function MUST revert if the provided `index` value falls outside of the range of the value returned from a directly preceding or subsequent function call to `countAttributeTypes`. It MUST NOT revert if the provided `index` value falls inside said range.",
                "params": {
                  "index": "uint256 The index of the attribute type in question."
                },
                "returns": {
                  "_0": "The ID of the attribute type."
                }
              },
              "getAttributeValue(address,uint256)": {
                "details": "This function MUST revert if a directly preceding or subsequent function call to `hasAttribute` with identical `account` and `attributeTypeID` parameters would return false.",
                "params": {
                  "account": "address The account to check for the given attribute value.",
                  "attributeTypeID": "uint256 The ID of the attribute type to check for."
                },
                "returns": {
                  "_0": "The attribute value if the attribute is valid, reverts otherwise."
                }
              },
              "hasAttribute(address,uint256)": {
                "details": "This function MUST return either true or false - i.e. calling this function MUST NOT cause the caller to revert.",
                "params": {
                  "account": "address The account to check for a valid attribute.",
                  "attributeTypeID": "uint256 The ID of the attribute type to check for."
                },
                "returns": {
                  "_0": "True if the attribute is assigned and valid, false otherwise."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_37": {
                  "entryPoint": null,
                  "id": 37,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040805160208101909152600080825261002c916001610032565b5061008a565b8260018101928215610065579160200282015b82811115610065578251829060ff16905591602001919060010190610045565b50610071929150610075565b5090565b5b808211156100715760008155600101610076565b610492806100996000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e62fde6146100675780634b5f297a1461008d57806355409970146100d6578063cd6c8343146100eb578063d71710e01461010b578063ff0b719214610112575b600080fd5b61007a6100753660046103c4565b610125565b6040519081526020015b60405180910390f35b6100c661009b3660046103dd565b6001600160a01b03919091166000908152600160209081526040808320938352929052205460ff1690565b6040519015158152602001610084565b6100e96100e43660046103c4565b61018d565b005b6100fe6100f93660046103dd565b61021d565b6040516100849190610415565b600161007a565b6100e96101203660046103c4565b6102ec565b6000600182106101725760405162461bcd60e51b8152602060048201526013602482015272496e646578204f7574206f6620426f756e642160681b60448201526064015b60405180910390fd5b6000826001811061018557610185610446565b015492915050565b60008054338083526001602081815260408086208587528252808620805460ff19169093179092558151808301835286815280820187905292855260028082528286208587529091529084206101e4929091610353565b506040513381527f1f9c75914c5f19dbd88fea3650adc0d96ce1acba5863d8a8cb9c5dbf194f8f689060200160405180910390a1505050565b610225610391565b6001600160a01b038316600090815260016020908152604080832085845290915290205460ff166102985760405162461bcd60e51b815260206004820152601c60248201527f4174747269627574652074797065204944206e6f7420666f756e6421000000006044820152606401610169565b6001600160a01b038316600090815260026020818152604080842086855290915280832081518083019283905292909182845b8154815260200190600101908083116102cb57509398975050505050505050565b60008054338083526001602081815260408086208587528252808620805460ff19168417905592855260028082528386208587528083528487209384015485518087019096528086528584018990528688529252909261034c9291610353565b5050505050565b8260028101928215610381579160200282015b82811115610381578251825591602001919060010190610366565b5061038d9291506103af565b5090565b60405180604001604052806002906020820280368337509192915050565b5b8082111561038d57600081556001016103b0565b6000602082840312156103d657600080fd5b5035919050565b600080604083850312156103f057600080fd5b82356001600160a01b038116811461040757600080fd5b946020939093013593505050565b60408101818360005b600281101561043d57815183526020928301929091019060010161041e565b50505092915050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220aeebe321409d99143d02f66fee7d001cb1957316ce3ce6dc348ae3894e0572ba64736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH2 0x2C SWAP2 PUSH1 0x1 PUSH2 0x32 JUMP JUMPDEST POP PUSH2 0x8A JUMP JUMPDEST DUP3 PUSH1 0x1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x65 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x45 JUMP JUMPDEST POP PUSH2 0x71 SWAP3 SWAP2 POP PUSH2 0x75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x76 JUMP JUMPDEST PUSH2 0x492 DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE62FDE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4B5F297A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x55409970 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xCD6C8343 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xD71710E0 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xFF0B7192 EQ PUSH2 0x112 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x84 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7A JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT PUSH2 0x172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578204F7574206F6620426F756E6421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x185 PUSH2 0x446 JUMP JUMPDEST ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP6 DUP8 MSTORE DUP3 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP1 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 DUP6 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE DUP3 DUP7 KECCAK256 DUP6 DUP8 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP5 KECCAK256 PUSH2 0x1E4 SWAP3 SWAP1 SWAP2 PUSH2 0x353 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x1F9C75914C5F19DBD88FEA3650ADC0D96CE1ACBA5863D8A8CB9C5DBF194F8F68 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x225 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174747269627574652074797065204944206E6F7420666F756E642100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2CB JUMPI POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP6 DUP8 MSTORE DUP3 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE SWAP3 DUP6 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE DUP4 DUP7 KECCAK256 DUP6 DUP8 MSTORE DUP1 DUP4 MSTORE DUP5 DUP8 KECCAK256 SWAP4 DUP5 ADD SLOAD DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE DUP6 DUP5 ADD DUP10 SWAP1 MSTORE DUP7 DUP9 MSTORE SWAP3 MSTORE SWAP1 SWAP3 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x353 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x381 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x381 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x366 JUMP JUMPDEST POP PUSH2 0x38D SWAP3 SWAP2 POP PUSH2 0x3AF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x41E JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xEB 0xE3 0x21 BLOCKHASH SWAP14 SWAP10 EQ RETURNDATASIZE MUL 0xF6 PUSH16 0xEE7D001CB1957316CE3CE6DC348AE389 0x4E SDIV PUSH19 0xBA64736F6C6343000809003300000000000000 ",
              "sourceMap": "93:4800:0:-:0;;;706:54;;;;;;;;;-1:-1:-1;730:23:0;;;;;;;;;-1:-1:-1;730:23:0;;;;;;;:::i;:::-;;93:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;93:4800:0;;;-1:-1:-1;93:4800:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@addCommodityValue_82": {
                  "entryPoint": 397,
                  "id": 82,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@countAttributeTypes_195": {
                  "entryPoint": null,
                  "id": 195,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getAttributeTypeID_216": {
                  "entryPoint": 293,
                  "id": 216,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getAttributeValue_185": {
                  "entryPoint": 541,
                  "id": 185,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@hasAttribute_150": {
                  "entryPoint": null,
                  "id": 150,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@updateCommodityValue_133": {
                  "entryPoint": 748,
                  "id": 133,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 989,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1045,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_985fa021095acd4b2d2ea5fb1aaecef22fdaef8380e0efeeacf3ade8814fdcd1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f6b15329cbf6526b6de80536a63193390ef60c7d726396b2dacf0fee6e2de13b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x21": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 1094,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2605:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:110:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "155:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "165:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "165:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "155:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:2",
                            "type": ""
                          }
                        ],
                        "src": "14:180:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:76:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "310:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "322:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "333:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "318:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "318:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "352:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "363:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "345:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "345:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "345:25:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "269:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "280:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "291:4:2",
                            "type": ""
                          }
                        ],
                        "src": "199:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "468:267:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "514:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "523:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "526:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "516:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "516:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "516:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "489:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "498:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "485:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "485:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "510:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "478:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "539:36:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "565:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "552:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "552:23:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "543:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "638:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "647:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "650:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "640:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "640:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "640:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "597:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "608:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "623:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "628:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "619:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "619:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "632:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "615:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "615:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "604:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "604:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "594:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "594:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "587:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "587:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "584:70:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "663:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "673:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "663:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "687:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "714:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "725:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "710:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "710:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "697:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "697:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "687:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "426:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "437:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "449:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "457:6:2",
                            "type": ""
                          }
                        ],
                        "src": "381:354:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "835:92:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "845:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "868:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "853:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "853:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "845:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "887:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "912:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "905:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "905:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "898:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "898:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "880:41:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "804:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "815:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "826:4:2",
                            "type": ""
                          }
                        ],
                        "src": "740:187:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1079:347:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1089:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1101:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1112:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1097:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:4:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1124:20:2",
                              "value": {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1135:9:2"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "1128:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1153:16:2",
                              "value": {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1160:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1153:3:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1178:20:2",
                              "value": {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1192:6:2"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1182:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1207:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1216:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1211:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1273:147:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1294:3:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "1305:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1299:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1299:13:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1287:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1287:26:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1287:26:2"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1326:14:2",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1336:4:2",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "1330:2:2",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1353:19:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1364:3:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1369:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1360:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1360:12:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1353:3:2"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1385:25:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "1399:6:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1407:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1395:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1395:15:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1385:6:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1237:1:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1240:4:2",
                                    "type": "",
                                    "value": "0x02"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1234:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1234:11:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1246:18:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1248:14:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1257:1:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1260:1:2",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1253:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1253:9:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1248:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1230:3:2",
                                "statements": []
                              },
                              "src": "1226:194:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1048:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1059:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1070:4:2",
                            "type": ""
                          }
                        ],
                        "src": "932:494:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1605:169:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1622:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1633:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1615:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1615:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1615:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1656:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1667:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1652:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1652:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1672:2:2",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1645:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1645:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1645:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1695:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1706:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1691:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1691:18:2"
                                  },
                                  {
                                    "hexValue": "496e646578204f7574206f6620426f756e6421",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1711:21:2",
                                    "type": "",
                                    "value": "Index Out of Bound!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1684:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1684:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1684:49:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1742:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1754:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1765:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1750:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1750:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1742:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f6b15329cbf6526b6de80536a63193390ef60c7d726396b2dacf0fee6e2de13b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1582:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1596:4:2",
                            "type": ""
                          }
                        ],
                        "src": "1431:343:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1811:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1828:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1835:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1840:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1831:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1831:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1821:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1821:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1821:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1868:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1871:4:2",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1861:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1861:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1861:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1892:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1895:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1885:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1885:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1885:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1779:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1943:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1960:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1967:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1972:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1963:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1963:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1953:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1953:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1953:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2000:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2003:4:2",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1993:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1993:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2024:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2027:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2017:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2017:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2017:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1911:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2144:102:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2154:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2166:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2177:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2162:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2162:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2154:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2196:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2211:6:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2227:3:2",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2232:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2223:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2223:11:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2236:1:2",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2219:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2219:19:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2207:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2207:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2189:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2189:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2189:51:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2113:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2124:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2135:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2043:203:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2425:178:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2442:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2453:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2435:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2435:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2435:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2476:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2487:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2472:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2472:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2492:2:2",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2465:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2465:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2465:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2515:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2526:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2511:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2511:18:2"
                                  },
                                  {
                                    "hexValue": "4174747269627574652074797065204944206e6f7420666f756e6421",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2531:30:2",
                                    "type": "",
                                    "value": "Attribute type ID not found!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2504:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2504:58:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2504:58:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2571:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2583:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2594:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2579:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2579:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2571:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_985fa021095acd4b2d2ea5fb1aaecef22fdaef8380e0efeeacf3ade8814fdcd1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2402:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2416:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2251:352:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x02) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f6b15329cbf6526b6de80536a63193390ef60c7d726396b2dacf0fee6e2de13b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index Out of Bound!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_985fa021095acd4b2d2ea5fb1aaecef22fdaef8380e0efeeacf3ade8814fdcd1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Attribute type ID not found!\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630e62fde6146100675780634b5f297a1461008d57806355409970146100d6578063cd6c8343146100eb578063d71710e01461010b578063ff0b719214610112575b600080fd5b61007a6100753660046103c4565b610125565b6040519081526020015b60405180910390f35b6100c661009b3660046103dd565b6001600160a01b03919091166000908152600160209081526040808320938352929052205460ff1690565b6040519015158152602001610084565b6100e96100e43660046103c4565b61018d565b005b6100fe6100f93660046103dd565b61021d565b6040516100849190610415565b600161007a565b6100e96101203660046103c4565b6102ec565b6000600182106101725760405162461bcd60e51b8152602060048201526013602482015272496e646578204f7574206f6620426f756e642160681b60448201526064015b60405180910390fd5b6000826001811061018557610185610446565b015492915050565b60008054338083526001602081815260408086208587528252808620805460ff19169093179092558151808301835286815280820187905292855260028082528286208587529091529084206101e4929091610353565b506040513381527f1f9c75914c5f19dbd88fea3650adc0d96ce1acba5863d8a8cb9c5dbf194f8f689060200160405180910390a1505050565b610225610391565b6001600160a01b038316600090815260016020908152604080832085845290915290205460ff166102985760405162461bcd60e51b815260206004820152601c60248201527f4174747269627574652074797065204944206e6f7420666f756e6421000000006044820152606401610169565b6001600160a01b038316600090815260026020818152604080842086855290915280832081518083019283905292909182845b8154815260200190600101908083116102cb57509398975050505050505050565b60008054338083526001602081815260408086208587528252808620805460ff19168417905592855260028082528386208587528083528487209384015485518087019096528086528584018990528688529252909261034c9291610353565b5050505050565b8260028101928215610381579160200282015b82811115610381578251825591602001919060010190610366565b5061038d9291506103af565b5090565b60405180604001604052806002906020820280368337509192915050565b5b8082111561038d57600081556001016103b0565b6000602082840312156103d657600080fd5b5035919050565b600080604083850312156103f057600080fd5b82356001600160a01b038116811461040757600080fd5b946020939093013593505050565b60408101818360005b600281101561043d57815183526020928301929091019060010161041e565b50505092915050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220aeebe321409d99143d02f66fee7d001cb1957316ce3ce6dc348ae3894e0572ba64736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE62FDE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4B5F297A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x55409970 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xCD6C8343 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xD71710E0 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xFF0B7192 EQ PUSH2 0x112 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x84 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7A JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT PUSH2 0x172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578204F7574206F6620426F756E6421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x185 PUSH2 0x446 JUMP JUMPDEST ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP6 DUP8 MSTORE DUP3 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP1 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 DUP6 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE DUP3 DUP7 KECCAK256 DUP6 DUP8 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP5 KECCAK256 PUSH2 0x1E4 SWAP3 SWAP1 SWAP2 PUSH2 0x353 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x1F9C75914C5F19DBD88FEA3650ADC0D96CE1ACBA5863D8A8CB9C5DBF194F8F68 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x225 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174747269627574652074797065204944206E6F7420666F756E642100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2CB JUMPI POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP6 DUP8 MSTORE DUP3 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE SWAP3 DUP6 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE DUP4 DUP7 KECCAK256 DUP6 DUP8 MSTORE DUP1 DUP4 MSTORE DUP5 DUP8 KECCAK256 SWAP4 DUP5 ADD SLOAD DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE DUP6 DUP5 ADD DUP10 SWAP1 MSTORE DUP7 DUP9 MSTORE SWAP3 MSTORE SWAP1 SWAP3 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x353 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x381 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x381 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x366 JUMP JUMPDEST POP PUSH2 0x38D SWAP3 SWAP2 POP PUSH2 0x3AF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x41E JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xEB 0xE3 0x21 BLOCKHASH SWAP14 SWAP10 EQ RETURNDATASIZE MUL 0xF6 PUSH16 0xEE7D001CB1957316CE3CE6DC348AE389 0x4E SDIV PUSH19 0xBA64736F6C6343000809003300000000000000 ",
              "sourceMap": "93:4800:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4659:232;;;;;;:::i;:::-;;:::i;:::-;;;345:25:2;;;333:2;318:18;4659:232:0;;;;;;;;2401:270;;;;;;:::i;:::-;-1:-1:-1;;;;;2621:26:0;;;;2512:4;2621:26;;;:17;:26;;;;;;;;:43;;;;;;;;;;;2401:270;;;;905:14:2;;898:22;880:41;;868:2;853:18;2401:270:0;740:187:2;766:504:0;;;;;;:::i;:::-;;:::i;:::-;;3283:476;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4050:111::-;4130:24;4050:111;;1276:587;;;;;;:::i;:::-;;:::i;4659:232::-;4725:7;4773:24;4765:5;:32;4744:98;;;;-1:-1:-1;;;4744:98:0;;1633:2:2;4744:98:0;;;1615:21:2;1672:2;1652:18;;;1645:30;-1:-1:-1;;;1691:18:2;;;1684:49;1750:18;;4744:98:0;;;;;;;;;4860:17;4878:5;4860:24;;;;;;;:::i;:::-;;;;4659:232;-1:-1:-1;;4659:232:0:o;766:504::-;827:32;1023:43;;1095:10;1077:29;;;1133:4;1077:29;;;;;;;;:53;;;;;;;;:60;;-1:-1:-1;;1077:60:0;;;;;;;1148:75;;;;;;;;;;;;;;;;:34;;;:22;:34;;;;;;:58;;;;;;;;;:75;;:58;;:75;:::i;:::-;-1:-1:-1;1238:25:0;;1252:10;2189:51:2;;1238:25:0;;2177:2:2;2162:18;1238:25:0;;;;;;;817:453;;766:504;:::o;3283:476::-;3399:17;;:::i;:::-;-1:-1:-1;;;;;3537:26:0;;;;;;:17;:26;;;;;;;;:43;;;;;;;;;;;3516:118;;;;-1:-1:-1;;;3516:118:0;;2453:2:2;3516:118:0;;;2435:21:2;2492:2;2472:18;;;2465:30;2531;2511:18;;;2504:58;2579:18;;3516:118:0;2251:352:2;3516:118:0;-1:-1:-1;;;;;3676:31:0;;3644:29;3676:31;;;:22;:31;;;;;;;;:48;;;;;;;;;3644:80;;;;;;;;;;3676:48;;;3644:80;;;;;;;;;;;;;;;;;-1:-1:-1;3644:80:0;;3283:476;-1:-1:-1;;;;;;;;3283:476:0:o;1276:587::-;1343:32;1539:43;;1611:10;1593:29;;;1649:4;1593:29;;;;;;;;:53;;;;;;;;:60;;-1:-1:-1;;1593:60:0;;;;;1693:34;;;:22;:34;;;;;;:58;;;;;;;;;:61;;;;1764:92;;;;;;;;;;;;;;;;;:58;;;;;1693:61;;1764:92;;1693:58;1764:92;:::i;:::-;;1333:530;;;1276:587;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:180:2;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o;381:354::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;552:23;;-1:-1:-1;;;;;604:31:2;;594:42;;584:70;;650:1;647;640:12;584:70;673:5;725:2;710:18;;;;697:32;;-1:-1:-1;;;381:354:2:o;932:494::-;1112:2;1097:18;;1101:9;1192:6;1070:4;1226:194;1240:4;1237:1;1234:11;1226:194;;;1299:13;;1287:26;;1336:4;1360:12;;;;1395:15;;;;1260:1;1253:9;1226:194;;;1230:3;;;932:494;;;;:::o;1779:127::-;1840:10;1835:3;1831:20;1828:1;1821:31;1871:4;1868:1;1861:15;1895:4;1892:1;1885:15"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "234000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "addCommodityValue(uint256)": "infinite",
                "countAttributeTypes()": "247",
                "getAttributeTypeID(uint256)": "2413",
                "getAttributeValue(address,uint256)": "infinite",
                "hasAttribute(address,uint256)": "2613",
                "updateCommodityValue(uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "addCommodityValue(uint256)": "55409970",
              "countAttributeTypes()": "d71710e0",
              "getAttributeTypeID(uint256)": "0e62fde6",
              "getAttributeValue(address,uint256)": "cd6c8343",
              "hasAttribute(address,uint256)": "4b5f297a",
              "updateCommodityValue(uint256)": "ff0b7192"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"senderAddr\",\"type\":\"address\"}],\"name\":\"SenderAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addCommodityValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countAttributeTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAttributeTypeID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"attributeTypeID\",\"type\":\"uint256\"}],\"name\":\"getAttributeValue\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"attributeTypeID\",\"type\":\"uint256\"}],\"name\":\"hasAttribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateCommodityValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"countAttributeTypes()\":{\"details\":\"This function MUST return a positive integer value  - i.e. calling this function MUST NOT cause the caller to revert.\",\"returns\":{\"_0\":\"The number of available attribute types.\"}},\"getAttributeTypeID(uint256)\":{\"details\":\"This function MUST revert if the provided `index` value falls outside of the range of the value returned from a directly preceding or subsequent function call to `countAttributeTypes`. It MUST NOT revert if the provided `index` value falls inside said range.\",\"params\":{\"index\":\"uint256 The index of the attribute type in question.\"},\"returns\":{\"_0\":\"The ID of the attribute type.\"}},\"getAttributeValue(address,uint256)\":{\"details\":\"This function MUST revert if a directly preceding or subsequent function call to `hasAttribute` with identical `account` and `attributeTypeID` parameters would return false.\",\"params\":{\"account\":\"address The account to check for the given attribute value.\",\"attributeTypeID\":\"uint256 The ID of the attribute type to check for.\"},\"returns\":{\"_0\":\"The attribute value if the attribute is valid, reverts otherwise.\"}},\"hasAttribute(address,uint256)\":{\"details\":\"This function MUST return either true or false - i.e. calling this function MUST NOT cause the caller to revert.\",\"params\":{\"account\":\"address The account to check for a valid attribute.\",\"attributeTypeID\":\"uint256 The ID of the attribute type to check for.\"},\"returns\":{\"_0\":\"True if the attribute is assigned and valid, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"countAttributeTypes()\":{\"notice\":\"Count the number of attribute types defined by the registry.\"},\"getAttributeTypeID(uint256)\":{\"notice\":\"Get the ID of the attribute type at index `index`.\"},\"getAttributeValue(address,uint256)\":{\"notice\":\"Retrieve the value of the attribute of the type with ID `attributeTypeID` on the account at `account`, assuming it is valid.\"},\"hasAttribute(address,uint256)\":{\"notice\":\"Check if an attribute of the type with ID `attributeTypeID` has been assigned to the account at `account` and is currently valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance_standard/Registry.sol\":\"Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governance_standard/Registry.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ERC1616.sol\\\";\\n\\ncontract Registry is ERC1616 {\\n    enum Affiliation { CommodityValue }\\n\\n    // Top-level information about attribute types held in a static array.\\n    uint256[1] private _attributeTypeIDs;\\n\\n    // Issued attributes held in a nested mapping by account & attribute type.\\n    mapping(address => mapping(uint256 => bool)) private _issuedAttributes;\\n\\n    event SenderAddress(address senderAddr);\\n\\n    // Issued attribute values held in a nested mapping by account & type.\\n    // uint256[2] = [PastValue, PresentValue]\\n    mapping(address => mapping(uint256 => uint256[2]))\\n        private _issuedAttributeValues;\\n\\n    constructor() {\\n        _attributeTypeIDs = [0];\\n    }\\n\\n    function addCommodityValue(uint256 value) external {\\n        uint256 commodityValueValueIndex = uint256(Affiliation.CommodityValue);\\n        // uint256 presentValueIndex = uint256(Affiliation.PresentValue);\\n        \\n        uint256 presentAttributeTypeID = _attributeTypeIDs[commodityValueValueIndex];\\n\\n        _issuedAttributes[msg.sender][presentAttributeTypeID] = true;\\n\\n        _issuedAttributeValues[msg.sender][presentAttributeTypeID] = [value, value];\\n        emit SenderAddress(msg.sender);\\n    }\\n\\n    function updateCommodityValue(uint256 newValue) external {\\n        uint256 commodityValueValueIndex = uint256(Affiliation.CommodityValue);\\n        // uint256 presentValueIndex = uint256(Affiliation.PresentValue);\\n        \\n        uint256 presentAttributeTypeID = _attributeTypeIDs[commodityValueValueIndex];\\n\\n        _issuedAttributes[msg.sender][presentAttributeTypeID] = true;\\n        uint256 currentPresentValue = _issuedAttributeValues[msg.sender][presentAttributeTypeID][1];\\n        _issuedAttributeValues[msg.sender][presentAttributeTypeID] = [currentPresentValue, newValue];\\n    }\\n\\n    /**\\n     * @notice Check if an attribute of the type with ID `attributeTypeID` has\\n     * been assigned to the account at `account` and is currently valid.\\n     * @param account address The account to check for a valid attribute.\\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\\n     * @return True if the attribute is assigned and valid, false otherwise.\\n     * @dev This function MUST return either true or false - i.e. calling this\\n     * function MUST NOT cause the caller to revert.\\n     */\\n    function hasAttribute(address account, uint256 attributeTypeID)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        // Return assignment status of attribute by account and attribute type ID\\n        return _issuedAttributes[account][attributeTypeID];\\n    }\\n\\n    /*\\n     * @notice Retrieve the value of the attribute of the type with ID\\n     * `attributeTypeID` on the account at `account`, assuming it is valid.\\n     * @param account address The account to check for the given attribute value.\\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\\n     * @return The attribute value if the attribute is valid, reverts otherwise.\\n     * @dev This function MUST revert if a directly preceding or subsequent\\n     * function call to `hasAttribute` with identical `account` and\\n     * `attributeTypeID` parameters would return false.\\n     */\\n    function getAttributeValue(address account, uint256 attributeTypeID)\\n        external\\n        view\\n        returns (uint256[2] memory)\\n    {\\n        // Revert if attribute with given account & attribute type ID is unassigned\\n        require(\\n            _issuedAttributes[account][attributeTypeID],\\n            \\\"Attribute type ID not found!\\\"\\n        );\\n        uint256[2] memory returnValue = _issuedAttributeValues[account][attributeTypeID];\\n        return returnValue;\\n    }\\n\\n    /**\\n     * @notice Count the number of attribute types defined by the registry.\\n     * @return The number of available attribute types.\\n     * @dev This function MUST return a positive integer value  - i.e. calling\\n     * this function MUST NOT cause the caller to revert.\\n     */\\n    function countAttributeTypes() external view returns (uint256) {\\n        return _attributeTypeIDs.length;\\n    }\\n\\n    /**\\n     * @notice Get the ID of the attribute type at index `index`.\\n     * @param index uint256 The index of the attribute type in question.\\n     * @return The ID of the attribute type.\\n     * @dev This function MUST revert if the provided `index` value falls outside\\n     * of the range of the value returned from a directly preceding or subsequent\\n     * function call to `countAttributeTypes`. It MUST NOT revert if the provided\\n     * `index` value falls inside said range.\\n     */\\n    function getAttributeTypeID(uint256 index) external view returns (uint256) {\\n        require(\\n            index < _attributeTypeIDs.length,\\n            \\\"Index Out of Bound!\\\"\\n        );\\n\\n        return _attributeTypeIDs[index];\\n    }\\n}\\n\",\"keccak256\":\"0x9a738e74b99099f7bec06fef037f0bafaa25069412009dc11da47e8195e35836\",\"license\":\"MIT\"},\"contracts/interfaces/ERC1616.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC-1616 Attribute Registry interface. ERC-165 ID: 0x5f46473f\\n */\\ninterface ERC1616 {\\n    /**\\n     * @notice Check if an attribute of the type with ID `attributeTypeID` has\\n     * been assigned to the account at `account` and is currently valid.\\n     * @param account address The account to check for a valid attribute.\\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\\n     * @return True if the attribute is assigned and valid, false otherwise.\\n     * @dev This function MUST return either true or false - i.e. calling this\\n     * function MUST NOT cause the caller to revert.\\n     */\\n    function hasAttribute(address account, uint256 attributeTypeID)\\n        external\\n        view\\n        returns (bool);\\n\\n    /**\\n     * @notice Retrieve the value of the attribute of the type with ID\\n     * `attributeTypeID` on the account at `account`, assuming it is valid.\\n     * @param account address The account to check for the given attribute value.\\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\\n     * @return The attribute value if the attribute is valid, reverts otherwise.\\n     * @dev This function MUST revert if a directly preceding or subsequent\\n     * function call to `hasAttribute` with identical `account` and\\n     * `attributeTypeID` parameters would return false.\\n     */\\n    function getAttributeValue(address account, uint256 attributeTypeID)\\n        external\\n        view\\n        returns (uint256[2] memory);\\n\\n    /**\\n     * @notice Count the number of attribute types defined by the registry.\\n     * @return The number of available attribute types.\\n     * @dev This function MUST return a positive integer value  - i.e. calling\\n     * this function MUST NOT cause the caller to revert.\\n     */\\n    function countAttributeTypes() external view returns (uint256);\\n\\n    /**\\n     * @notice Get the ID of the attribute type at index `index`.\\n     * @param index uint256 The index of the attribute type in question.\\n     * @return The ID of the attribute type.\\n     * @dev This function MUST revert if the provided `index` value falls outside\\n     * of the range of the value returned from a directly preceding or subsequent\\n     * function call to `countAttributeTypes`. It MUST NOT revert if the provided\\n     * `index` value falls inside said range.\\n     */\\n    function getAttributeTypeID(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xb4a0ecca9f99f48829dcb649516616516d03a6480b6a0d2f7988f7114091481b\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 10,
                "contract": "contracts/governance_standard/Registry.sol:Registry",
                "label": "_attributeTypeIDs",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_uint256)1_storage"
              },
              {
                "astId": 16,
                "contract": "contracts/governance_standard/Registry.sol:Registry",
                "label": "_issuedAttributes",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
              },
              {
                "astId": 28,
                "contract": "contracts/governance_standard/Registry.sol:Registry",
                "label": "_issuedAttributeValues",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)2_storage))"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_uint256)1_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[1]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)2_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[2]",
                "numberOfBytes": "64"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)2_storage))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => uint256[2]))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => bool))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_bool)"
              },
              "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256[2])",
                "numberOfBytes": "32",
                "value": "t_array(t_uint256)2_storage"
              },
              "t_mapping(t_uint256,t_bool)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "countAttributeTypes()": {
                "notice": "Count the number of attribute types defined by the registry."
              },
              "getAttributeTypeID(uint256)": {
                "notice": "Get the ID of the attribute type at index `index`."
              },
              "getAttributeValue(address,uint256)": {
                "notice": "Retrieve the value of the attribute of the type with ID `attributeTypeID` on the account at `account`, assuming it is valid."
              },
              "hasAttribute(address,uint256)": {
                "notice": "Check if an attribute of the type with ID `attributeTypeID` has been assigned to the account at `account` and is currently valid."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/interfaces/ERC1616.sol": {
        "ERC1616": {
          "abi": [
            {
              "inputs": [],
              "name": "countAttributeTypes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getAttributeTypeID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "attributeTypeID",
                  "type": "uint256"
                }
              ],
              "name": "getAttributeValue",
              "outputs": [
                {
                  "internalType": "uint256[2]",
                  "name": "",
                  "type": "uint256[2]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "attributeTypeID",
                  "type": "uint256"
                }
              ],
              "name": "hasAttribute",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "countAttributeTypes()": {
                "details": "This function MUST return a positive integer value  - i.e. calling this function MUST NOT cause the caller to revert.",
                "returns": {
                  "_0": "The number of available attribute types."
                }
              },
              "getAttributeTypeID(uint256)": {
                "details": "This function MUST revert if the provided `index` value falls outside of the range of the value returned from a directly preceding or subsequent function call to `countAttributeTypes`. It MUST NOT revert if the provided `index` value falls inside said range.",
                "params": {
                  "index": "uint256 The index of the attribute type in question."
                },
                "returns": {
                  "_0": "The ID of the attribute type."
                }
              },
              "getAttributeValue(address,uint256)": {
                "details": "This function MUST revert if a directly preceding or subsequent function call to `hasAttribute` with identical `account` and `attributeTypeID` parameters would return false.",
                "params": {
                  "account": "address The account to check for the given attribute value.",
                  "attributeTypeID": "uint256 The ID of the attribute type to check for."
                },
                "returns": {
                  "_0": "The attribute value if the attribute is valid, reverts otherwise."
                }
              },
              "hasAttribute(address,uint256)": {
                "details": "This function MUST return either true or false - i.e. calling this function MUST NOT cause the caller to revert.",
                "params": {
                  "account": "address The account to check for a valid attribute.",
                  "attributeTypeID": "uint256 The ID of the attribute type to check for."
                },
                "returns": {
                  "_0": "True if the attribute is assigned and valid, false otherwise."
                }
              }
            },
            "title": "ERC-1616 Attribute Registry interface. ERC-165 ID: 0x5f46473f",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "countAttributeTypes()": "d71710e0",
              "getAttributeTypeID(uint256)": "0e62fde6",
              "getAttributeValue(address,uint256)": "cd6c8343",
              "hasAttribute(address,uint256)": "4b5f297a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"countAttributeTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAttributeTypeID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"attributeTypeID\",\"type\":\"uint256\"}],\"name\":\"getAttributeValue\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"attributeTypeID\",\"type\":\"uint256\"}],\"name\":\"hasAttribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"countAttributeTypes()\":{\"details\":\"This function MUST return a positive integer value  - i.e. calling this function MUST NOT cause the caller to revert.\",\"returns\":{\"_0\":\"The number of available attribute types.\"}},\"getAttributeTypeID(uint256)\":{\"details\":\"This function MUST revert if the provided `index` value falls outside of the range of the value returned from a directly preceding or subsequent function call to `countAttributeTypes`. It MUST NOT revert if the provided `index` value falls inside said range.\",\"params\":{\"index\":\"uint256 The index of the attribute type in question.\"},\"returns\":{\"_0\":\"The ID of the attribute type.\"}},\"getAttributeValue(address,uint256)\":{\"details\":\"This function MUST revert if a directly preceding or subsequent function call to `hasAttribute` with identical `account` and `attributeTypeID` parameters would return false.\",\"params\":{\"account\":\"address The account to check for the given attribute value.\",\"attributeTypeID\":\"uint256 The ID of the attribute type to check for.\"},\"returns\":{\"_0\":\"The attribute value if the attribute is valid, reverts otherwise.\"}},\"hasAttribute(address,uint256)\":{\"details\":\"This function MUST return either true or false - i.e. calling this function MUST NOT cause the caller to revert.\",\"params\":{\"account\":\"address The account to check for a valid attribute.\",\"attributeTypeID\":\"uint256 The ID of the attribute type to check for.\"},\"returns\":{\"_0\":\"True if the attribute is assigned and valid, false otherwise.\"}}},\"title\":\"ERC-1616 Attribute Registry interface. ERC-165 ID: 0x5f46473f\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"countAttributeTypes()\":{\"notice\":\"Count the number of attribute types defined by the registry.\"},\"getAttributeTypeID(uint256)\":{\"notice\":\"Get the ID of the attribute type at index `index`.\"},\"getAttributeValue(address,uint256)\":{\"notice\":\"Retrieve the value of the attribute of the type with ID `attributeTypeID` on the account at `account`, assuming it is valid.\"},\"hasAttribute(address,uint256)\":{\"notice\":\"Check if an attribute of the type with ID `attributeTypeID` has been assigned to the account at `account` and is currently valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ERC1616.sol\":\"ERC1616\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ERC1616.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC-1616 Attribute Registry interface. ERC-165 ID: 0x5f46473f\\n */\\ninterface ERC1616 {\\n    /**\\n     * @notice Check if an attribute of the type with ID `attributeTypeID` has\\n     * been assigned to the account at `account` and is currently valid.\\n     * @param account address The account to check for a valid attribute.\\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\\n     * @return True if the attribute is assigned and valid, false otherwise.\\n     * @dev This function MUST return either true or false - i.e. calling this\\n     * function MUST NOT cause the caller to revert.\\n     */\\n    function hasAttribute(address account, uint256 attributeTypeID)\\n        external\\n        view\\n        returns (bool);\\n\\n    /**\\n     * @notice Retrieve the value of the attribute of the type with ID\\n     * `attributeTypeID` on the account at `account`, assuming it is valid.\\n     * @param account address The account to check for the given attribute value.\\n     * @param attributeTypeID uint256 The ID of the attribute type to check for.\\n     * @return The attribute value if the attribute is valid, reverts otherwise.\\n     * @dev This function MUST revert if a directly preceding or subsequent\\n     * function call to `hasAttribute` with identical `account` and\\n     * `attributeTypeID` parameters would return false.\\n     */\\n    function getAttributeValue(address account, uint256 attributeTypeID)\\n        external\\n        view\\n        returns (uint256[2] memory);\\n\\n    /**\\n     * @notice Count the number of attribute types defined by the registry.\\n     * @return The number of available attribute types.\\n     * @dev This function MUST return a positive integer value  - i.e. calling\\n     * this function MUST NOT cause the caller to revert.\\n     */\\n    function countAttributeTypes() external view returns (uint256);\\n\\n    /**\\n     * @notice Get the ID of the attribute type at index `index`.\\n     * @param index uint256 The index of the attribute type in question.\\n     * @return The ID of the attribute type.\\n     * @dev This function MUST revert if the provided `index` value falls outside\\n     * of the range of the value returned from a directly preceding or subsequent\\n     * function call to `countAttributeTypes`. It MUST NOT revert if the provided\\n     * `index` value falls inside said range.\\n     */\\n    function getAttributeTypeID(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xb4a0ecca9f99f48829dcb649516616516d03a6480b6a0d2f7988f7114091481b\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "countAttributeTypes()": {
                "notice": "Count the number of attribute types defined by the registry."
              },
              "getAttributeTypeID(uint256)": {
                "notice": "Get the ID of the attribute type at index `index`."
              },
              "getAttributeValue(address,uint256)": {
                "notice": "Retrieve the value of the attribute of the type with ID `attributeTypeID` on the account at `account`, assuming it is valid."
              },
              "hasAttribute(address,uint256)": {
                "notice": "Check if an attribute of the type with ID `attributeTypeID` has been assigned to the account at `account` and is currently valid."
              }
            },
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/governance_standard/Registry.sol": {
        "ast": {
          "absolutePath": "contracts/governance_standard/Registry.sol",
          "exportedSymbols": {
            "ERC1616": [
              257
            ],
            "Registry": [
              217
            ]
          },
          "id": 218,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:23:0"
            },
            {
              "absolutePath": "contracts/interfaces/ERC1616.sol",
              "file": "../interfaces/ERC1616.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 218,
              "sourceUnit": 258,
              "src": "56:35:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3,
                    "name": "ERC1616",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 257,
                    "src": "114:7:0"
                  },
                  "id": 4,
                  "nodeType": "InheritanceSpecifier",
                  "src": "114:7:0"
                }
              ],
              "canonicalName": "Registry",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 217,
              "linearizedBaseContracts": [
                217,
                257
              ],
              "name": "Registry",
              "nameLocation": "102:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Registry.Affiliation",
                  "id": 6,
                  "members": [
                    {
                      "id": 5,
                      "name": "CommodityValue",
                      "nameLocation": "147:14:0",
                      "nodeType": "EnumValue",
                      "src": "147:14:0"
                    }
                  ],
                  "name": "Affiliation",
                  "nameLocation": "133:11:0",
                  "nodeType": "EnumDefinition",
                  "src": "128:35:0"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_attributeTypeIDs",
                  "nameLocation": "263:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "244:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_storage",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "244:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9,
                    "length": {
                      "hexValue": "31",
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "252:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "244:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "_issuedAttributes",
                  "nameLocation": "419:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "366:70:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                    "typeString": "mapping(address => mapping(uint256 => bool))"
                  },
                  "typeName": {
                    "id": 15,
                    "keyType": {
                      "id": 11,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "374:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "366:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                      "typeString": "mapping(address => mapping(uint256 => bool))"
                    },
                    "valueType": {
                      "id": 14,
                      "keyType": {
                        "id": 12,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "393:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "385:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      },
                      "valueType": {
                        "id": 13,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "404:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 20,
                  "name": "SenderAddress",
                  "nameLocation": "449:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "senderAddr",
                        "nameLocation": "471:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "463:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "462:20:0"
                  },
                  "src": "443:40:0"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_issuedAttributeValues",
                  "nameLocation": "677:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "610:89:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$_$",
                    "typeString": "mapping(address => mapping(uint256 => uint256[2]))"
                  },
                  "typeName": {
                    "id": 27,
                    "keyType": {
                      "id": 21,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "618:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "610:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$_$",
                      "typeString": "mapping(address => mapping(uint256 => uint256[2]))"
                    },
                    "valueType": {
                      "id": 26,
                      "keyType": {
                        "id": 22,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "637:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "629:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                        "typeString": "mapping(uint256 => uint256[2])"
                      },
                      "valueType": {
                        "baseType": {
                          "id": 23,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 25,
                        "length": {
                          "hexValue": "32",
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "656:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "648:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 36,
                    "nodeType": "Block",
                    "src": "720:40:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31,
                            "name": "_attributeTypeIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "730:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_storage",
                              "typeString": "uint256[1] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "hexValue": "30",
                                "id": 32,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "751:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 33,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "750:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$1_memory_ptr",
                              "typeString": "uint8[1] memory"
                            }
                          },
                          "src": "730:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$1_storage",
                            "typeString": "uint256[1] storage ref"
                          }
                        },
                        "id": 35,
                        "nodeType": "ExpressionStatement",
                        "src": "730:23:0"
                      }
                    ]
                  },
                  "id": 37,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "717:2:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "720:0:0"
                  },
                  "scope": 217,
                  "src": "706:54:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "817:453:0",
                    "statements": [
                      {
                        "assignments": [
                          43
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 43,
                            "mutability": "mutable",
                            "name": "commodityValueValueIndex",
                            "nameLocation": "835:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "827:32:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 42,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "827:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 49,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46,
                                "name": "Affiliation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "870:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Affiliation_$6_$",
                                  "typeString": "type(enum Registry.Affiliation)"
                                }
                              },
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CommodityValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5,
                              "src": "870:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Affiliation_$6",
                                "typeString": "enum Registry.Affiliation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Affiliation_$6",
                                "typeString": "enum Registry.Affiliation"
                              }
                            ],
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "862:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 44,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "862:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "862:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "827:70:0"
                      },
                      {
                        "assignments": [
                          51
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51,
                            "mutability": "mutable",
                            "name": "presentAttributeTypeID",
                            "nameLocation": "998:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "990:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 50,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "990:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 55,
                        "initialValue": {
                          "baseExpression": {
                            "id": 52,
                            "name": "_attributeTypeIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1023:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_storage",
                              "typeString": "uint256[1] storage ref"
                            }
                          },
                          "id": 54,
                          "indexExpression": {
                            "id": 53,
                            "name": "commodityValueValueIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1041:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1023:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "990:76:0"
                      },
                      {
                        "expression": {
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 56,
                                "name": "_issuedAttributes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1077:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 60,
                              "indexExpression": {
                                "expression": {
                                  "id": 57,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1095:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 58,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1095:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1077:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 61,
                            "indexExpression": {
                              "id": 59,
                              "name": "presentAttributeTypeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1107:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1077:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1133:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1077:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 64,
                        "nodeType": "ExpressionStatement",
                        "src": "1077:60:0"
                      },
                      {
                        "expression": {
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 65,
                                "name": "_issuedAttributeValues",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1148:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256[2] storage ref))"
                                }
                              },
                              "id": 69,
                              "indexExpression": {
                                "expression": {
                                  "id": 66,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1171:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1171:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1148:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 70,
                            "indexExpression": {
                              "id": 68,
                              "name": "presentAttributeTypeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1183:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1148:58:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 71,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "1210:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 72,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "1217:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 73,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1209:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "src": "1148:75:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage",
                            "typeString": "uint256[2] storage ref"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "1148:75:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 77,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1252:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1252:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76,
                            "name": "SenderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1238:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1238:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "EmitStatement",
                        "src": "1233:30:0"
                      }
                    ]
                  },
                  "functionSelector": "55409970",
                  "id": 82,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addCommodityValue",
                  "nameLocation": "775:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "801:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "793:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:15:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "817:0:0"
                  },
                  "scope": 217,
                  "src": "766:504:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1333:530:0",
                    "statements": [
                      {
                        "assignments": [
                          88
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 88,
                            "mutability": "mutable",
                            "name": "commodityValueValueIndex",
                            "nameLocation": "1351:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 132,
                            "src": "1343:32:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 87,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1343:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 94,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 91,
                                "name": "Affiliation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "1386:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Affiliation_$6_$",
                                  "typeString": "type(enum Registry.Affiliation)"
                                }
                              },
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CommodityValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5,
                              "src": "1386:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Affiliation_$6",
                                "typeString": "enum Registry.Affiliation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Affiliation_$6",
                                "typeString": "enum Registry.Affiliation"
                              }
                            ],
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1378:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1378:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1378:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1343:70:0"
                      },
                      {
                        "assignments": [
                          96
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 96,
                            "mutability": "mutable",
                            "name": "presentAttributeTypeID",
                            "nameLocation": "1514:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 132,
                            "src": "1506:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1506:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "baseExpression": {
                            "id": 97,
                            "name": "_attributeTypeIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1539:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_storage",
                              "typeString": "uint256[1] storage ref"
                            }
                          },
                          "id": 99,
                          "indexExpression": {
                            "id": 98,
                            "name": "commodityValueValueIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "1557:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1539:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1506:76:0"
                      },
                      {
                        "expression": {
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 101,
                                "name": "_issuedAttributes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1593:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => bool))"
                                }
                              },
                              "id": 105,
                              "indexExpression": {
                                "expression": {
                                  "id": 102,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1611:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1611:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1593:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 106,
                            "indexExpression": {
                              "id": 104,
                              "name": "presentAttributeTypeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1623:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1593:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1649:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1593:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 109,
                        "nodeType": "ExpressionStatement",
                        "src": "1593:60:0"
                      },
                      {
                        "assignments": [
                          111
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 111,
                            "mutability": "mutable",
                            "name": "currentPresentValue",
                            "nameLocation": "1671:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 132,
                            "src": "1663:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 110,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1663:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 120,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 112,
                                "name": "_issuedAttributeValues",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1693:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256[2] storage ref))"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "expression": {
                                  "id": 113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1716:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1716:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1693:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 117,
                            "indexExpression": {
                              "id": 116,
                              "name": "presentAttributeTypeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1728:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1693:58:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "id": 119,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1752:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1693:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1663:91:0"
                      },
                      {
                        "expression": {
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 121,
                                "name": "_issuedAttributeValues",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1764:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256[2] storage ref))"
                                }
                              },
                              "id": 125,
                              "indexExpression": {
                                "expression": {
                                  "id": 122,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1787:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1787:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1764:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 126,
                            "indexExpression": {
                              "id": 124,
                              "name": "presentAttributeTypeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1799:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1764:58:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 127,
                                "name": "currentPresentValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1826:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 128,
                                "name": "newValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "1847:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 129,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1825:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "src": "1764:92:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage",
                            "typeString": "uint256[2] storage ref"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1764:92:0"
                      }
                    ]
                  },
                  "functionSelector": "ff0b7192",
                  "id": 133,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateCommodityValue",
                  "nameLocation": "1285:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "newValue",
                        "nameLocation": "1314:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "1306:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1306:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1305:18:0"
                  },
                  "returnParameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1333:0:0"
                  },
                  "scope": 217,
                  "src": "1276:587:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    230
                  ],
                  "body": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "2522:149:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 143,
                              "name": "_issuedAttributes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2621:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 145,
                            "indexExpression": {
                              "id": 144,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2621:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 147,
                          "indexExpression": {
                            "id": 146,
                            "name": "attributeTypeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "2648:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2621:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 142,
                        "id": 148,
                        "nodeType": "Return",
                        "src": "2614:50:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 134,
                    "nodeType": "StructuredDocumentation",
                    "src": "1869:527:0",
                    "text": " @notice Check if an attribute of the type with ID `attributeTypeID` has\n been assigned to the account at `account` and is currently valid.\n @param account address The account to check for a valid attribute.\n @param attributeTypeID uint256 The ID of the attribute type to check for.\n @return True if the attribute is assigned and valid, false otherwise.\n @dev This function MUST return either true or false - i.e. calling this\n function MUST NOT cause the caller to revert."
                  },
                  "functionSelector": "4b5f297a",
                  "id": 150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasAttribute",
                  "nameLocation": "2410:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2431:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "2423:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2423:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "attributeTypeID",
                        "nameLocation": "2448:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "2440:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2422:42:0"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "2512:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2511:6:0"
                  },
                  "scope": 217,
                  "src": "2401:270:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    242
                  ],
                  "body": {
                    "id": 184,
                    "nodeType": "Block",
                    "src": "3422:337:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 162,
                                  "name": "_issuedAttributes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "3537:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => bool))"
                                  }
                                },
                                "id": 164,
                                "indexExpression": {
                                  "id": 163,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 152,
                                  "src": "3555:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3537:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 166,
                              "indexExpression": {
                                "id": 165,
                                "name": "attributeTypeID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 154,
                                "src": "3564:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3537:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4174747269627574652074797065204944206e6f7420666f756e6421",
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3594:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_985fa021095acd4b2d2ea5fb1aaecef22fdaef8380e0efeeacf3ade8814fdcd1",
                                "typeString": "literal_string \"Attribute type ID not found!\""
                              },
                              "value": "Attribute type ID not found!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_985fa021095acd4b2d2ea5fb1aaecef22fdaef8380e0efeeacf3ade8814fdcd1",
                                "typeString": "literal_string \"Attribute type ID not found!\""
                              }
                            ],
                            "id": 161,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3516:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3516:118:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "3516:118:0"
                      },
                      {
                        "assignments": [
                          175
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 175,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "3662:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 184,
                            "src": "3644:29:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 173,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3644:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 174,
                              "length": {
                                "hexValue": "32",
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3652:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "3644:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                                "typeString": "uint256[2]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 181,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 176,
                              "name": "_issuedAttributeValues",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "3676:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256[2] storage ref))"
                              }
                            },
                            "id": 178,
                            "indexExpression": {
                              "id": 177,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3699:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3676:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                              "typeString": "mapping(uint256 => uint256[2] storage ref)"
                            }
                          },
                          "id": 180,
                          "indexExpression": {
                            "id": 179,
                            "name": "attributeTypeID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "3708:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3676:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage",
                            "typeString": "uint256[2] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3644:80:0"
                      },
                      {
                        "expression": {
                          "id": 182,
                          "name": "returnValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "3741:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "functionReturnParameters": 160,
                        "id": 183,
                        "nodeType": "Return",
                        "src": "3734:18:0"
                      }
                    ]
                  },
                  "functionSelector": "cd6c8343",
                  "id": 185,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAttributeValue",
                  "nameLocation": "3292:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3318:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "3310:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3310:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "attributeTypeID",
                        "nameLocation": "3335:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "3327:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3327:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3309:42:0"
                  },
                  "returnParameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "3399:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 156,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3399:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 158,
                          "length": {
                            "hexValue": "32",
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3407:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "3399:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3398:19:0"
                  },
                  "scope": 217,
                  "src": "3283:476:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    248
                  ],
                  "body": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "4113:48:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 191,
                            "name": "_attributeTypeIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4130:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_storage",
                              "typeString": "uint256[1] storage ref"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4130:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 190,
                        "id": 193,
                        "nodeType": "Return",
                        "src": "4123:31:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 186,
                    "nodeType": "StructuredDocumentation",
                    "src": "3765:280:0",
                    "text": " @notice Count the number of attribute types defined by the registry.\n @return The number of available attribute types.\n @dev This function MUST return a positive integer value  - i.e. calling\n this function MUST NOT cause the caller to revert."
                  },
                  "functionSelector": "d71710e0",
                  "id": 195,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "countAttributeTypes",
                  "nameLocation": "4059:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4078:2:0"
                  },
                  "returnParameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "4104:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4104:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4103:9:0"
                  },
                  "scope": 217,
                  "src": "4050:111:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    256
                  ],
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "4734:157:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 204,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "4765:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 205,
                                  "name": "_attributeTypeIDs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "4773:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$1_storage",
                                    "typeString": "uint256[1] storage ref"
                                  }
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4773:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4765:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e646578204f7574206f6620426f756e6421",
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4811:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6b15329cbf6526b6de80536a63193390ef60c7d726396b2dacf0fee6e2de13b",
                                "typeString": "literal_string \"Index Out of Bound!\""
                              },
                              "value": "Index Out of Bound!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f6b15329cbf6526b6de80536a63193390ef60c7d726396b2dacf0fee6e2de13b",
                                "typeString": "literal_string \"Index Out of Bound!\""
                              }
                            ],
                            "id": 203,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4744:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4744:98:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "4744:98:0"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 211,
                            "name": "_attributeTypeIDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4860:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_storage",
                              "typeString": "uint256[1] storage ref"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "id": 212,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "4878:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4860:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 214,
                        "nodeType": "Return",
                        "src": "4853:31:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "4167:487:0",
                    "text": " @notice Get the ID of the attribute type at index `index`.\n @param index uint256 The index of the attribute type in question.\n @return The ID of the attribute type.\n @dev This function MUST revert if the provided `index` value falls outside\n of the range of the value returned from a directly preceding or subsequent\n function call to `countAttributeTypes`. It MUST NOT revert if the provided\n `index` value falls inside said range."
                  },
                  "functionSelector": "0e62fde6",
                  "id": 216,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAttributeTypeID",
                  "nameLocation": "4668:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "4695:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "4687:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4687:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4686:15:0"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "4725:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4725:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4724:9:0"
                  },
                  "scope": 217,
                  "src": "4659:232:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 218,
              "src": "93:4800:0",
              "usedErrors": []
            }
          ],
          "src": "31:4863:0"
        },
        "id": 0
      },
      "contracts/interfaces/ERC1616.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ERC1616.sol",
          "exportedSymbols": {
            "ERC1616": [
              257
            ]
          },
          "id": 258,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 219,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ERC1616",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 220,
                "nodeType": "StructuredDocumentation",
                "src": "56:79:1",
                "text": " @title ERC-1616 Attribute Registry interface. ERC-165 ID: 0x5f46473f"
              },
              "fullyImplemented": false,
              "id": 257,
              "linearizedBaseContracts": [
                257
              ],
              "name": "ERC1616",
              "nameLocation": "146:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 221,
                    "nodeType": "StructuredDocumentation",
                    "src": "160:527:1",
                    "text": " @notice Check if an attribute of the type with ID `attributeTypeID` has\n been assigned to the account at `account` and is currently valid.\n @param account address The account to check for a valid attribute.\n @param attributeTypeID uint256 The ID of the attribute type to check for.\n @return True if the attribute is assigned and valid, false otherwise.\n @dev This function MUST return either true or false - i.e. calling this\n function MUST NOT cause the caller to revert."
                  },
                  "functionSelector": "4b5f297a",
                  "id": 230,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasAttribute",
                  "nameLocation": "701:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "722:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "714:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "attributeTypeID",
                        "nameLocation": "739:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "731:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "731:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "713:42:1"
                  },
                  "returnParameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "803:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "803:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "802:6:1"
                  },
                  "scope": 257,
                  "src": "692:117:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 231,
                    "nodeType": "StructuredDocumentation",
                    "src": "815:602:1",
                    "text": " @notice Retrieve the value of the attribute of the type with ID\n `attributeTypeID` on the account at `account`, assuming it is valid.\n @param account address The account to check for the given attribute value.\n @param attributeTypeID uint256 The ID of the attribute type to check for.\n @return The attribute value if the attribute is valid, reverts otherwise.\n @dev This function MUST revert if a directly preceding or subsequent\n function call to `hasAttribute` with identical `account` and\n `attributeTypeID` parameters would return false."
                  },
                  "functionSelector": "cd6c8343",
                  "id": 242,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAttributeValue",
                  "nameLocation": "1431:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1457:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "1449:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "attributeTypeID",
                        "nameLocation": "1474:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "1466:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1466:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1448:42:1"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "1538:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 237,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1538:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 239,
                          "length": {
                            "hexValue": "32",
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1546:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "1538:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1537:19:1"
                  },
                  "scope": 257,
                  "src": "1422:135:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 243,
                    "nodeType": "StructuredDocumentation",
                    "src": "1563:280:1",
                    "text": " @notice Count the number of attribute types defined by the registry.\n @return The number of available attribute types.\n @dev This function MUST return a positive integer value  - i.e. calling\n this function MUST NOT cause the caller to revert."
                  },
                  "functionSelector": "d71710e0",
                  "id": 248,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "countAttributeTypes",
                  "nameLocation": "1857:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1876:2:1"
                  },
                  "returnParameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "1902:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1901:9:1"
                  },
                  "scope": 257,
                  "src": "1848:63:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 249,
                    "nodeType": "StructuredDocumentation",
                    "src": "1917:487:1",
                    "text": " @notice Get the ID of the attribute type at index `index`.\n @param index uint256 The index of the attribute type in question.\n @return The ID of the attribute type.\n @dev This function MUST revert if the provided `index` value falls outside\n of the range of the value returned from a directly preceding or subsequent\n function call to `countAttributeTypes`. It MUST NOT revert if the provided\n `index` value falls inside said range."
                  },
                  "functionSelector": "0e62fde6",
                  "id": 256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAttributeTypeID",
                  "nameLocation": "2418:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2445:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "2437:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2437:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2436:15:1"
                  },
                  "returnParameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "2475:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2475:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2474:9:1"
                  },
                  "scope": 257,
                  "src": "2409:75:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 258,
              "src": "136:2350:1",
              "usedErrors": []
            }
          ],
          "src": "31:2456:1"
        },
        "id": 1
      }
    }
  }
}
